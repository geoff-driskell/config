sonos_say:
  alias: Sonos TTS Script
  sequence:
  - service: sonos.snapshot
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: media_player.unjoin
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: media_player.volume_set
    data_template:
      entity_id: '{{ sonos_entity }}'
      volume_level: '{{ volume }}'
  - service: tts.say
    data_template:
      entity_id: '{{ sonos_entity }}'
      message: <speak> <break time="1s"/> "{{ message }}"" </speak>
  - delay: '{{ delay }}'
  - service: sonos.restore
    data_template:
      entity_id: '{{ sonos_entity }}'
master_tv_bedtime:
  alias: Someone in Bed
  sequence:
  - if:
    - condition: state
      entity_id: fan.master_bedroom_fan
      state: 'off'
    then:
    - service: fan.turn_on
      data: {}
      target:
        entity_id: fan.master_bedroom_fan
  - service: remote.send_command
    data:
      device: master_bedroom_tv
      command: power
    target:
      entity_id: remote.master_bedroom_remote
  - service: remote.send_command
    data:
      command: wakeup
    target:
      entity_id: remote.master_bedroom
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: remote.send_command
    data:
      delay_secs: 0.4
      device: master_bedroom_tv
      command: sleep
      num_repeats: 7
    target:
      entity_id: remote.master_bedroom_remote
  - if:
    - condition: state
      entity_id: media_player.master_bedroom
      attribute: media_artist
      state: The West Wing
    then:
    - service: remote.send_command
      data:
        command: play
      target:
        entity_id: remote.master_bedroom
  mode: single
everyone_in_bed:
  alias: Everyone in Bed
  sequence:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.master_bedroom_lamps
      - light.master_bedroom_light
      - light.geoff_s_closet_light
  mode: single
